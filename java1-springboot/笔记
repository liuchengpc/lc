1、springboot特点：
	（1）可以创建独立的Spring应用程序，并且基于其Maven或Gradle插件，可以创建可执行的JARs和WARs；
	（2）内嵌Tomcat或Jetty等Servlet容器；
	（3）提供自动配置的“starter”项目对象模型（POMS）以简化Maven配置；
	（4）尽可能自动配置Spring容器；
	（5）提供准备好的特性，如指标、健康检查和外部化配置；
	（6）约定优于配置
2、springboot选择的模块：
	Spring web：mvc
	Mysql Drvier：驱动
	Thymeleaf：视图
	DevTools：调试
	Mybatis：
	
3、注解：
	@MapperScan：扫描mapper接口，装载到spring容器中
	mybatis.mapper-locations：设置mapper文件的位置
	mybatis.config-location:设置mybatis核心配置文件位置

4、thymeleaf：
	在html表中加入：xmlns:th="http://www.thymeleaf.org"
	循环：th:each="item,index : ${list}"
	文本：th:text="${内容}"
	${}:获取作用域中的数据
	#{}:调用提供的api函数
	@{}:路径解析
	
5.springboot静态资源：默认路径为static下

6.springmvc配置使用配置注解@Configuration，
	类继承自WebMvcConfigurationSupport
	静态资源自定义：重写addResourceHandlers
	内容例如：registry.addResourceHandler("/**").
				addResourceLocations("classpath:/static/**").
				addResourceLocations("file:/Users/liucheng/images");
	配置springmvc消息转换器			
			重写方法为：configureMessageConverters
	拦截器重写方法为：addInterceptors
		拦截器实现自：HandlerInterceptor
		重写方法：
			preHandler:控制器方法执行前执行此方法
			post：控制器方法执行无异常执行
			after：控制器方法执行结束后执行
7.thymeleaf js中获取根路径："[[@{/}]]"

8.日期格式化：
	//参数从前台传入的到后台时转换格式
    @JsonFormat(pattern = "yyyy-MM-dd")
	//后台将数据序列化到前台时的转换数据格式
	  @DateTimeFormat(pattern = "yyyy-MM-dd") //jackson
	//当如果你将数据转换成fastjson,则用@JSOnField
	
	视图解析器
	消息转换器
	任务：创建git账户
	
	
	拦截器
	文件上传
		ajax文件上传：var f =new  FormData("表单对象");
					f.append("名称"，"值")
		jquery上传：
			ajax必须设置：
				processDate:false
				contentType:false,
		下载：
	excel解析	
		导入
		导出
	
	

	
	